# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/brigade/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/brigade/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/brigade/overcommit#configuration
#
# Uncomment the following lines to make the configuration take effect.
# plugin_directory: '.git-hooks'

PreCommit:
  AuthorName:
    enabled: false
    description: 'Check for author name'
    requires_files: false
    required: true
    quiet: true

  RailsBestPractices:
    enabled: false
    description: 'Analyze with RailsBestPractices'
    required_executable: 'rails_best_practices'
    flags: ['--without-color']
    install_command: 'gem install rails_best_practices'

  RubyLint:
    enabled: false
    description: 'Analyze with ruby-lint'
    required_executable: 'ruby-lint'
    flags: ['--presenter=syntastic', '--levels=error,warning']
    install_command: 'gem install ruby-lint'
    include:
      - '**/*.gemspec'
      - '**/*.rb'

CommitMsg:
  CommitPrefix:
    enabled: true
    description: 'Check commit message for project prefix'
    prefix: 'TEST'

#  RuboCop:
#    enabled: true
#    on_warn: fail # Treat all warnings as failures
#
#  TrailingWhitespace:
#    enabled: true
#    exclude:
#      - '**/db/structure.sql' # Ignore trailing whitespace in generated files
#
#PostCheckout:
#  ALL: # Special hook name that customizes all hooks of this type
#    quiet: true # Change all post-checkout hooks to only display output on failure
#
#  IndexTags:
#    enabled: true # Generate a tags file with `ctags` each time HEAD changes
